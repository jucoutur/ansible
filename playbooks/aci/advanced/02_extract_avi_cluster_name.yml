---
- hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - vars/creds.yml
    - vars/tenant_vars.yml
  roles:
    - role: avinetworks.avisdk
  tasks:

    - name: get Avi cluster info from api
      avi_api_session:
        avi_credentials: "{{ avi_credentials }}"
        http_method: get
        path: cluster
      register: cluster_infos
    
#    - name: get Avi cluster uuid
#      debug: msg="{{ cluster_infos.obj.uuid }}"
     
    - name: use jinja2 filter to extract id chunks
      set_fact:
        cluster1: "{{ cluster_infos.obj.uuid.split('-')[1] }}"
        cluster2: "{{ cluster_infos.obj.uuid.split('-')[2] }}"
        
    - name: create clustername from cluster ids
      set_fact:
        avi_clustername: "Avi_{{ cluster1 }}_{{ cluster2 }}"

    - name: add avi_clustername to vars/tenant_vars.yml
      lineinfile:
        path: vars/tenant_vars.yml
        line: 'avi_device: {{ avi_clustername }}'